# Configuration for prometheus chart, see https://github.com/prometheus-community/helm-charts/tree/main/charts/prometheus

# These components do not make sense in a local dev environment
# and can be disabled.
alertmanager:
  enabled: true
  config:
    global:
      resolve_timeout: 5m
    routes:
      group_by: ['alertname', 'cluster', 'namespace', 'service']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack-notifications'
      routes:
        - match:
            severity: critical
          receiver: 'slack-notifications'
    receivers:
      - name: 'slack-notifications'
        slack_configs:
          - api_url: 'https://hooks.slack.com/services/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'
            channel: '#alerts-warnings'
            send_resolved: true
kube-state-metrics:
  enabled: true
prometheus-node-exporter:
  enabled: false
prometheus-pushgateway:
  enabled: false

server:
  extraFlags:
    # Required for configmap-reload.
    - "web.enable-lifecycle"
    # Used by tempo to write traces.
    - "web.enable-remote-write-receiver"
  persistentVolume:
    # Give Prometheus more space to store metrics.
    size: 20Gi
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager.observability.svc.cluster.local:9093
# Scrape metrics from deployed providers
extraScrapeConfigs: |
  - job_name: 'capi-providers'
    # 15s is a bit often for production but helps to get metrics quicker for development.
    scrape_interval: 15s
    metrics_path: /metrics
    scheme: https
    authorization:
      type: Bearer
      credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    kubernetes_sd_configs:
      - role: pod

    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_labelpresent_cluster_x_k8s_io_provider]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_container_port_name]
        action: keep
        regex: metrics
      - source_labels: [__meta_kubernetes_pod_label_cluster_x_k8s_io_provider]
        action: replace
        target_label: provider
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod

serverFiles:
  alerting_rules.yml:
    groups:
      - name: example
        rules:
          - alert: HighRequestLatency
            expr: http_request_duration_seconds{quantile="0.5"} > 1
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: "High request latency on {{ $labels.instance }}"
              description: "{{ $labels.instance }} has a median request latency above 1s (current value: {{ $value }}s)"
