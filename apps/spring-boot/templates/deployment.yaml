apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: spring
    app.kubernetes.io/name: portfogram-server
spec:
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app.kubernetes.io/instance: spring
      app.kubernetes.io/name: portfogram-server
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: spring
        app.kubernetes.io/name: portfogram-server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8081"
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "app.name" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "minimeisme/portfogram-argocd-k8s:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: {{ .Values.container.httpPort }}
              protocol: TCP
            - name: http-management
              containerPort: {{ .Values.container.managementPort }}
              protocol: TCP
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path }}
              port: {{ .Values.container.managementPort }}
          {{- end }}
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: {{ .Values.container.managementPort }}
          {{- end }}
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ .Values.container.managementPort }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
          env:
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: SPRING_DATASOURCE_USERNAME
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: SPRING_DATASOURCE_PASSWORD
            - name: SERVER_PORT
              value: {{ .Values.container.httpPort | quote }}
            - name: MANAGEMENT_SERVER_PORT
              value: {{ .Values.container.managementPort | quote }}
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://otel-collector.observability:4317"
            - name: OTEL_SERVICE_NAME
              value: {{ include "app.name" . }}
            - name: KUBE_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "pod=$(KUBE_POD_NAME),namespace={{ .Release.Namespace }},service.name={{ include "app.name" . }}"
            - name: OTEL_METRICS_EXPORTER
              value: "otlp"
            - name: OTEL_TRACES_EXPORTER
              value: "otlp"
            - name: OTEL_LOGS_EXPORTER
              value: "otlp"
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: "http/protobuf"
            - name: OTEL_JAVAAGENT_DEBUG
              value: "true"
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/opentelemetry-javaagent.jar"
      dnsConfig:
        options:
          - name: ndots
            value: "5"